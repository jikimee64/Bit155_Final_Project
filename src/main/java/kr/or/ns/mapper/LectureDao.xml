<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ns.dao.LectureDao">

	<!-- 총 게시글 수 -->
	<select id="getLectureCount" resultType="Integer">
		SELECT COUNT(*) FROM LECTURE_BOARD
	</select>
	
	
	<!-- 총 게시글 수 -->
	<select id="getCheckedL_seq" resultType="Integer">
		select L_seq from bookmark where BOOKMARK_CHECK = 1 and user_id = #{user_id}
	</select>



	<!-- 강의 리스트 -->
	<select id="getLectureList" resultType="hashmap" parameterType="kr.or.ns.vo.Criteria">
	   <![CDATA[
			SELECT * FROM LECTURE_BOARD
			ORDER BY L_SEQ DESC
			LIMIT #{pageStart}, #{perPageNum}     
		]]>
	</select>
	
	<!-- 강의 상세 내용-->
	<select id="getLecture" resultType="hashmap">
	   <![CDATA[
			select *
			from lecture_board
			left outer join price_category
			on lecture_board.p_seq = price_category.p_seq
			left outer join site_category
			on lecture_board.site_seq = site_category.site_seq
			left outer join language_category
			on lecture_board.lan_seq = language_category.lan_seq
			where l_seq = #{l_seq}
		]]>
	</select>
	
	
	<!-- 북마크추가 -->
	<insert id="heartinsert" parameterType="kr.or.ns.vo.BookMark">
		
		INSERT INTO BookMark(user_id,l_seq,bookmark_check) values(#{user_id},#{l_seq},#{bookmark_check})
	
	</insert>
	
	<!-- 존재하는 북마크인지 확인 -->
	<select id="heartcheck" parameterType="kr.or.ns.vo.BookMark" resultType="int">
		select count(*) from BookMark
		where user_id = #{user_id} and l_seq = #{l_seq}
	</select>
	
	
	<!-- 기존 북마크테이블에 업데이트 하러갑니다 -->
	<update id="heartupdate" parameterType="kr.or.ns.vo.BookMark">
		update BookMark set bookmark_check =#{bookmark_check} 
		where user_id = #{user_id} and l_seq = #{l_seq}
	</update>
	
	
	
	<!-- 북마크의 체크유무번호 확인 -->
	<select id="heartnum" parameterType="kr.or.ns.vo.BookMark" resultType="int">
		select bookmark_check from BookMark
		where user_id = #{user_id} and l_seq = #{l_seq}
	</select>
	
	
	
	
	<!-- 가져온 북마크 갯수 -->
	<select id="getBookmarkCount" resultType="Integer">
		  <![CDATA[
			select count(*)
			from lecture_board
			left outer join price_category
			on lecture_board.p_seq = price_category.p_seq
			left outer join bookmark
			on lecture_board.l_seq = bookmark.l_seq
			where bookmark.user_id = #{user_id} and
			bookmark_check = 1
		]]>
	</select>


	
<!-- 	가져온 북마크 목록 페이징 -->
<!-- 		<select id="getBookmarkList" resultType="hashmap" parameterType="kr.or.ns.vo.Criteria_Select"> -->
	<select id="getBookmarkList" resultType="hashmap" parameterType="hashmap" >
	   <![CDATA[
			select *
			from lecture_board
			left outer join price_category
			on lecture_board.p_seq = price_category.p_seq
			left outer join bookmark
			on lecture_board.l_seq = bookmark.l_seq
			where bookmark.user_id = #{user_id} and
			bookmark_check = 1
			order by bookmark.l_seq desc
            limit #{pageStart}, #{perPageNum} 
		]]>

	</select> 
	
	

	<!-- <delete id="deleteLecture"> DELETE NOTICES WHERE SEQ=#{seq} </delete> 
		<update id="updateLecture" parameterType="vo.Lecture"> UPDATE NOTICES SET 
		TITLE=#{title}, CONTENT=#{content}, FILESRC=#{fileSrc , jdbcType=VARCHAR} 
		, FILESRC2=#{fileSrc2 , jdbcType=VARCHAR} WHERE SEQ=#{seq} </update> <select 
		id="getLectureDetail" resultType="vo.Lecture"> SELECT seq,title,writer,content,regdate,hit,filesrc,filesrc2 
		FROM NOTICES WHERE SEQ=#{seq} </select> <insert id="insertLecture" parameterType="vo.Lecture" 
		> <selectKey order="BEFORE" keyProperty="seq" resultType="String"> SELECT 
		MAX(TO_NUMBER(SEQ))+1 FROM NOTICES </selectKey> INSERT INTO NOTICES(SEQ, 
		TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC , FILESRC2) VALUES(#{seq} , 
		#{title}, #{content}, #{writer}, SYSDATE, 0, #{fileSrc},#{fileSrc2}) </insert> -->
</mapper>