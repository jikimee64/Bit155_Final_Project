<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ns.dao.AjaxRestDao">

	<!-- 이름과 이메일 받아서 존재하는 회원인지 확인 -->
	<select id="emailCheck" parameterType="hashmap" resultType="int">
		select count(*) from users
		where user_name = #{user_name} and user_email = #{user_email}
	</select>

	<!-- 이름과 이메일 받아서 아이디 제공  -->
	<select id="searchId" parameterType="hashMap" resultType="kr.or.ns.vo.Users">
		select * from users
		where user_name = #{user_name} and user_email = #{user_email}
	</select>
	
	<!-- 새로운 임시 비밀번호 생성 -->
	<update id="updatePw">
		update users set user_pwd =#{user_pwd} 
		where user_id = #{user_id} and user_email = #{user_email}
	</update>

	<!-- 아이디 중복체크 -->
	<select id="idcheck" resultType="int">
		select count(*) from users where user_id = #{user_id}
	</select>


	<!-- 아이디와 이메일 받아서 이름 제공  -->
	<select id="checkEmail" parameterType="hashMap" resultType="int">
		select count(*) from users
		where user_id = #{user_id} and user_email = #{user_email}
	</select>
	
	<!-- 스터디 그룹 인서트 -->
	<insert id="insertStudyGroup" parameterType="hashMap">
insert IGNORE into study_group(s_seq,user_id,accept_status,role_name) values(#{s_seq}, #{user_id}, '승인완료', '회원')
	</insert>
	
	<!-- 신고처리(게시판) -->
	<insert id="insertBlame" parameterType="hashMap">
		insert into blame_board(btc_seq,bpc_seq,board_seq,bl_id,bl_target_id,bl_title,bl_content,write_date)
		select #{btc_seq}, 1, #{board_seq}, #{current_userid}, #{bl_target_id}, #{bl_title}, #{bl_content}, now() from dual
		where not exists(select * from blame_board where bpc_seq=#{bpc_seq} and board_seq=#{board_seq})
	</insert>
	
	<!-- 신고처리(쪽지) -->
	<insert id="insertBlame_Message" parameterType="hashMap">
		insert into blame_board(btc_seq,bpc_seq,board_seq,bl_id,bl_target_id,bl_title,bl_content,write_date)
		select #{btc_seq}, 2, #{board_seq}, #{current_userid}, #{bl_target_id}, #{bl_title}, #{bl_content}, now() from dual
		where not exists(select * from blame_board where bpc_seq=#{bpc_seq} and board_seq=#{board_seq})
	</insert> 
	
	
	<!-- 선택된 쪽지만 삭제하기  -->
	<delete id= "delete_Message" parameterType= "hashMap">
	delete from message
	where m_seq = #{m_seq}
	</delete>
	
	<!-- 유저정보 모달창에 띄우기 -->
	<select id="getUserInfo" resultType="hashMap">
		select * from users where
		user_id=#{USER_ID}
	</select>

	
	
</mapper>