<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ns.dao.MyPageDao">

	<!-- 회원정보 가져오기 -->
	<select id="getUsers" resultType="kr.or.ns.vo.Users">
		select * from users where
		user_id=#{USER_ID}
	</select>

	<select id="getSkill" resultType="hashmap">
		select skill_name, skill_level
		from skill where user_id=#{userid}
	</select>
	<!-- 회원정보 가져오기 끝 -->

	<!-- 회원정보 수정 -->
	<update id="MyPageUserEdit" parameterType="kr.or.ns.vo.Users">
		update users
		set
		user_id = #{user_id}, user_pwd=#{user_pwd}, enabled=1,
		user_name=#{user_name}, user_email=#{user_email},
		profile_img
		=#{profile_img},
		nickname = #{nickname},
		introduce = #{introduce},
		blame_count = #{blame_count}
		where user_id = #{user_id}
	</update>

	<update id="editskill" parameterType="hashmap">
		update skill
		set skill_level
		= #{skill_level}
		where user_id = #{user_id}
		and skill_name =
		#{skill_name}
	</update>


	<!-- 회원정보 수정 끝 -->

	<!-- 회원탈퇴 -->
	<delete id="userDelete">
		delete from users
		where user_id = #{user_id}
	</delete>

	<!-- 북마크 가져오기 -->
	<select id="getBookMark" resultType="hashMap">
			<![CDATA[
			select *
			from lecture_board
			left outer join price_category
			on lecture_board.p_seq = price_category.p_seq
			left outer join bookmark
			on lecture_board.l_seq = bookmark.l_seq
			where bookmark.user_id = #{user_id} and bookmark.bookmark_check = 1   
			]]>
	</select>

	<!-- 북마크 갯수 가져오기 -->
	<select id="getbkCount" resultType="int">
		SELECT count(*) FROM users as
		u JOIN bookmark AS b ON u.user_id = b.user_id
		where u.user_id =
		#{user_id}
	</select>

	<!-- 댓굴 갯수 가져오기 -->
	<select id="getcmCount" resultType="int">
		select count(*) from users as
		u join comment as c on u.user_id = c.r_name
		where u.user_id =
		#{user_id}
	</select>

	<!-- 댓굴 갯수 가져오기 -->
	<select id="getsbCount" resultType="int">
		select count(*) from users as
		u join study_board as s on u.user_id =
		s.user_id where u.user_id =
		#{user_id}
	</select>
	
	<!-- 참여중 스터디  -->
	<select id="join_study" resultType="int">
		select count(*) from study_group
		where user_id = #{user_id} and role_name = '회원'
	</select>
	
	<!-- 모집중 스터디  -->
	<select id="recruit_study" resultType="int">
	select count(*) from study_group
	where user_id = #{user_id} and role_name = '방장'
	</select>

	<!-- 스터디 목록 가져오기 -->
	<select id="myPageStudyList" resultType="hashMap">
			<![CDATA[
		select * ,(select count(*) from study_group where accept_status = '승인완료' and s_seq= study_board.s_seq) as 'accept' 
		from study_board
		left outer join language_category
		on study_board.lan_seq = language_category.lan_seq
		left outer join location
		on study_board.loc_seq = location.loc_seq
		left outer join study_content_category
		on study_board.c_seq = study_content_category.c_seq
		left outer join study_group
		on study_board.s_seq = study_group.s_seq                              
		WHERE study_group.user_id= #{user_id} and study_group.role_name  = '회원' 
		order by study_board.s_seq desc
			]]>
	</select>

	<select id="studyStatus" resultType="hashMap">
	   	select users.nickname, study_group.s_seq,study_group.user_id,study_group.accept_status,study_group.role_name from study_group 
	    left outer join users
	    on study_group.user_id = users.user_id
	    where s_seq = #{s_seq} order by s_seq asc, role_name
	</select>
	
	
	<select id="getRole" parameterType="hashmap" resultType="hashMap">
	    <!--  select user_id from study_group where role_name = #{role_name} and s_seq = #{s_seq}  -->
	   select users.user_id, users.nickname from study_group
       left outer join users
       on study_group.user_id = users.user_id
       where study_group.role_name = #{role_name} and study_group.s_seq = #{s_seq}
	</select>
	
	<select id="getStatus" resultType="string">
	     select status from study_board where s_seq = #{s_seq} 
	</select>
	
	<select id="getNicknames" resultType="hashMap">
	select nickname from users where 
	</select>
	
	
	
	
	

</mapper>